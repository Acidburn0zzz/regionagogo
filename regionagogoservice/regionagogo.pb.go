// Code generated by protoc-gen-go.
// source: regionagogo.proto
// DO NOT EDIT!

/*
Package regionagogoservice is a generated protocol buffer package.

It is generated from these files:
	regionagogo.proto

It has these top-level messages:
	Point
	RegionResponse
*/
package regionagogoservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Point struct {
	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Point) Reset()                    { *m = Point{} }
func (m *Point) String() string            { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()               {}
func (*Point) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RegionResponse struct {
	Code string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *RegionResponse) Reset()                    { *m = RegionResponse{} }
func (m *RegionResponse) String() string            { return proto.CompactTextString(m) }
func (*RegionResponse) ProtoMessage()               {}
func (*RegionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Point)(nil), "regionagogoservice.Point")
	proto.RegisterType((*RegionResponse)(nil), "regionagogoservice.RegionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion1

// Client API for RegionAGogo service

type RegionAGogoClient interface {
	// Obtains the region at a given position.
	GetRegion(ctx context.Context, in *Point, opts ...grpc.CallOption) (*RegionResponse, error)
}

type regionAGogoClient struct {
	cc *grpc.ClientConn
}

func NewRegionAGogoClient(cc *grpc.ClientConn) RegionAGogoClient {
	return &regionAGogoClient{cc}
}

func (c *regionAGogoClient) GetRegion(ctx context.Context, in *Point, opts ...grpc.CallOption) (*RegionResponse, error) {
	out := new(RegionResponse)
	err := grpc.Invoke(ctx, "/regionagogoservice.RegionAGogo/GetRegion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RegionAGogo service

type RegionAGogoServer interface {
	// Obtains the region at a given position.
	GetRegion(context.Context, *Point) (*RegionResponse, error)
}

func RegisterRegionAGogoServer(s *grpc.Server, srv RegionAGogoServer) {
	s.RegisterService(&_RegionAGogo_serviceDesc, srv)
}

func _RegionAGogo_GetRegion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Point)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(RegionAGogoServer).GetRegion(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _RegionAGogo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "regionagogoservice.RegionAGogo",
	HandlerType: (*RegionAGogoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRegion",
			Handler:    _RegionAGogo_GetRegion_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x4a, 0x4d, 0xcf,
	0xcc, 0xcf, 0x4b, 0x4c, 0xcf, 0x4f, 0xcf, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x42,
	0x12, 0x2a, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x55, 0xd2, 0xe1, 0x62, 0x0d, 0xc8, 0xcf, 0xcc,
	0x2b, 0x11, 0x12, 0xe0, 0xe2, 0xc8, 0x49, 0x2c, 0xc9, 0x2c, 0x29, 0x4d, 0x49, 0x95, 0x60, 0x54,
	0x60, 0xd4, 0x60, 0x12, 0x12, 0xe4, 0xe2, 0xcc, 0xc9, 0xcf, 0x4b, 0x87, 0x08, 0x31, 0x81, 0x84,
	0x80, 0xaa, 0xf9, 0x82, 0xc0, 0x66, 0x04, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0xf1,
	0x70, 0xb1, 0x24, 0xe7, 0x43, 0xb5, 0x70, 0x82, 0x78, 0x79, 0x89, 0xb9, 0x10, 0xd5, 0x9c, 0x46,
	0xd1, 0x5c, 0xdc, 0x10, 0xd5, 0x8e, 0xee, 0x40, 0x1b, 0x85, 0x7c, 0xb8, 0x38, 0xdd, 0x53, 0x4b,
	0x20, 0x22, 0x42, 0x92, 0x7a, 0x98, 0x8e, 0xd1, 0x03, 0xbb, 0x44, 0x4a, 0x09, 0x9b, 0x14, 0xaa,
	0xb5, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x3f, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x18,
	0x9f, 0xfa, 0xe8, 0x00, 0x00, 0x00,
}
